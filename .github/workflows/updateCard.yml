name: Update issue status in project board

on:
  issues:
    types: [opened]

jobs:
  updateIssueStatus:
    runs-on: ubuntu-latest
    steps:
      - name: Update issue status
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const core = require('@actions/core');
            const github = require('@actions/github');
            const axios = require('axios');

            try {
              // Get the necessary inputs from the user
              const cardId = core.getInput('card-id');
              const newStatus = core.getInput('new-status');

              // Authenticate with GitHub
              const token = process.env.GITHUB_TOKEN;
              const octokit = github.getOctokit(token);

              // Get the necessary information about the repository and project board
              const context = github.context;
              const owner = context.payload.repository.owner.login;
              const repo = context.payload.repository.name;
              const projectId = context.payload.project_card.project_id;

              // Define the GraphQL mutation to update the status of a card
              const mutation = `
                mutation updateCard($cardId: ID!, $newStatus: String!) {
                  updateProjectCard(input: {id: $cardId, state: $newStatus}) {
                    clientMutationId
                  }
                }
              `;

              // Send the GraphQL mutation to update the status of the card
              axios({
                url: `https://api.github.com/graphql`,
                method: 'post',
                headers: {
                  'Authorization': `Bearer ${token}`,
                  'Accept': 'application/vnd.github.inertia-preview+json'
                },
                data: {
                  query: mutation,
                  variables: {
                    cardId: cardId,
                    newStatus: newStatus
                  }
                }
              }).then(response => {
                console.log(response.data);
              }).catch(error => {
                console.log(error);
              });
            } catch (error) {
              console.log(error);
            }